;; -*- mode: lisp -*-
(defpoll paclog 
  :initial '[{"transaction": "","command": "", "packages": [{"name": "","change": "", "version":"", "installed": "false"}]}]'
  :interval "30s"
; You can query today, month, week, year, all (no value defaults to week) 
  '~/.config/eww/scripts/PacLog.sh week')

(defwidget pacmanButton []
  (eventbox
    :onclick `eww open --toggle pacmanPanel`
    :onhover "eww update hoverPacDots=true & eww update hoverPacman=true"
    :onhoverlost "./scripts/hoverPac.sh &"
    (box :space-evenly false
      :tooltip "Package panel"
      ; (image :path "./assets/pacman.gif")
      (image 
        :image-height 18 
        :path "./assets/pacman${hoverPacman == false ? ".svg" : ".gif"}"
      )
      ; (image :image-height 18 :path "./assets/pacmanWide.svg")
      (revealer
        :transition "slideright"
        :reveal "${hoverPacDots}"
        :duration "1000ms"
        (label :text "")
      )
    )
  )
)

(defvar hoverPacDots false)
(defvar hoverPacman false)

(defwindow pacmanPanel
  :monitor 1
  :stacking "fg"
  :geometry (geometry
              :anchor "top right"
              :height "100%"
              :width 400
              :vexpand true)
  (eventbox 
    :onhover 'eww update hover_state="pacmanPanel"'
    ; :onhoverlost './scripts/check_hover.sh pacmanPanel &'
    (box
      :orientation "v"
      :space-evenly false
      :class "window right"
      ; :timeout "2000ms" ; TODO drawing large json with eww can cause an orphaned window if it times out.
      (image :image-height 90 :path "./assets/pacman-wide.svg")
      (pacmanLog)
    )
  )
)

(defwidget pacmanLog []
  (scroll 
    :vscroll true
    :hscroll false
    :vexpand true
    (box 
      :orientation "v"
      :space-evenly false
      :spacing 10
      (for event in paclog
        (box 
          :hexpand true
          :orientation "v"
          :space-evenly false
          (label 
            :class "purple" 
            :halign "start" 
            :wrap true
            :text "${event.command}")
          (box
            :class "panel"
            :orientation "v"
            (label 
              :class "yellow" 
              :halign "end" 
              :text "${substring(event.transaction, 1,10)} @ ${
                      substring(event.transaction, 12,8)}"
            )
            (label :text "") ;blank line spacer
            (box
              (label :halign "start" :text "Package")
              (label :halign "end" :text "Version")
            )
            (for pack in "${event.packages}"
              (box :hexpand true :space-evenly false
                (label 
                  :text "${pack.name}" 
                  :halign "start"
                  :class "${pack.installed ? "" : "strikeRed " } 
                          ${pack.change == "upgraded" ? "lavender" :
                            pack.change == "installed" ? "green" :
                            "red"}"
                )
                (label 
                  :text "${pack.version}"
                  :class "${pack.installed ? "" : "strikeRed"}"
                  :hexpand true
                  :halign "end"
                  :truncate true
                  :truncate-left true
                )
              )
            )
          )
        )
      )
    )
  )
)
