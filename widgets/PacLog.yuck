;; -*- mode: lisp -*-

;;  _               _        _              _ _          _ _
;; | |   _   _ _ __| | __   / \   _ __   __| | |    ___ (_) |_ ___ _ __
;; | |  | | | | '__| |/ /  / _ \ | '_ \ / _` | |   / _ \| | __/ _ \ '__|
;; | |__| |_| | |  |   <  / ___ \| | | | (_| | |__| (_) | | ||  __/ |
;; |_____\__,_|_|  |_|\_\/_/   \_\_| |_|\__,_|_____\___/|_|\__\___|_|
;; ____________________________________________________________________________
;; ----------------------------------------------------------------------------
;; Copyright 2025 LurkAndLoiter.
;; ____________________________________________________________________________
;;  __  __ ___ _____   _     _
;; |  \/  |_ _|_   _| | |   (_) ___ ___ _ __  ___  ___
;; | |\/| || |  | |   | |   | |/ __/ _ \ '_ \/ __|/ _ \
;; | |  | || |  | |   | |___| | (_|  __/ | | \__ \  __/
;; |_|  |_|___| |_|   |_____|_|\___\___|_| |_|___/\___|
;;
;; Permission is hereby granted, free of charge, to any person obtaining a copy
;; of this software and associated documentation files (the "Software"), to
;; deal in the Software without restriction, including without limitation the
;; rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
;; sell copies of the Software, and to permit persons to whom the Software is
;; furnished to do so, subject to the following conditions:
;;
;; The above copyright notice and this permission notice shall be included in
;; all copies or substantial portions of the Software.
;;
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
;; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
;; IN THE SOFTWARE.
;; ____________________________________________________________________________
;; ----------------------------------------------------------------------------
;; "Zetus Lupetus" "Omelette du fromage" "You're killing me smalls" "Ugh As If"
;; "Hey. Listen!" "Do a barrel roll!" "Dear Darla, I hate your stinking guts."
;; "If we listen to each other's hearts. We'll find we're never too far apart."
;; ____________________________________________________________________________

(defpoll paclog
  :initial '[{"transaction": "","command": "", "packages": [{"name": "","change": "", "version":"", "installed": "false"}]}]'
  :interval "30s"
; You can query today, month, week, year, all (no value defaults to week)
  '~/.config/eww/scripts/PacLog.sh week')

(defwidget pacmanButton []
  (eventbox
    :onclick `eww open --toggle pacmanPanel`
    :onhover "eww update hoverPacDots=true & eww update hoverPacman=true"
    :onhoverlost "./scripts/hoverPac.sh &"
    (box :space-evenly false
      :tooltip "Package panel"
      ; (image :path "./assets/pacman.gif")
      (image
        :image-height 18
        :path "./assets/pacman${hoverPacman == false ? ".svg" : ".gif"}"
      )
      ; (image :image-height 18 :path "./assets/pacmanWide.svg")
      (revealer
        :transition "slideright"
        :reveal "${hoverPacDots}"
        :duration "1000ms"
        (label :text "")
      )
    )
  )
)

(defvar hoverPacDots false)
(defvar hoverPacman false)

(defwindow pacmanPanel
  :monitor 1
  :stacking "fg"
  :geometry (geometry
              :anchor "top right"
              :height "100%"
              :width 400
              :vexpand true)
  (eventbox
    :onhover 'eww update hover_state="pacmanPanel"'
    ; :onhoverlost './scripts/check_hover.sh pacmanPanel &'
    (box
      :orientation "v"
      :space-evenly false
      :class "window right"
      ; :timeout "2000ms" ; TODO drawing large json with eww can cause an orphaned window if it times out.
      (image :image-height 90 :path "./assets/pacman-wide.svg")
      (pacmanLog)
    )
  )
)

(defwidget pacmanLog []
  (scroll
    :vscroll true
    :hscroll false
    :vexpand true
    (box
      :orientation "v"
      :space-evenly false
      :spacing 10
      (for event in paclog
        (box
          :hexpand true
          :orientation "v"
          :space-evenly false
          (label
            :class "purple"
            :halign "start"
            :wrap true
            :text "${event.command}")
          (box
            :class "panel"
            :orientation "v"
            (label
              :class "yellow"
              :halign "end"
              :text "${substring(event.transaction, 1,10)} @ ${
                      substring(event.transaction, 12,8)}"
            )
            (label :text "") ;blank line spacer
            (box
              (label :halign "start" :text "Package")
              (label :halign "end" :text "Version")
            )
            (for pack in "${event.packages}"
              (box :hexpand true :space-evenly false
                (label
                  :text "${pack.name}"
                  :halign "start"
                  :class "${pack.installed ? "" : "strikeRed " }
                          ${pack.change == "upgraded" ? "lavender" :
                            pack.change == "installed" ? "green" :
                            "red"}"
                )
                (label
                  :text "${pack.version}"
                  :class "${pack.installed ? "" : "strikeRed"}"
                  :hexpand true
                  :halign "end"
                  :truncate true
                  :truncate-left true
                )
              )
            )
          )
        )
      )
    )
  )
)
