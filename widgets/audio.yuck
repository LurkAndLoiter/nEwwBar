;; -*- mode: lisp -*-

;;  _               _        _              _ _          _ _
;; | |   _   _ _ __| | __   / \   _ __   __| | |    ___ (_) |_ ___ _ __
;; | |  | | | | '__| |/ /  / _ \ | '_ \ / _` | |   / _ \| | __/ _ \ '__|
;; | |__| |_| | |  |   <  / ___ \| | | | (_| | |__| (_) | | ||  __/ |
;; |_____\__,_|_|  |_|\_\/_/   \_\_| |_|\__,_|_____\___/|_|\__\___|_|
;; ____________________________________________________________________________
;; ----------------------------------------------------------------------------
;; Copyright 2025 LurkAndLoiter.
;; ____________________________________________________________________________
;;  __  __ ___ _____   _     _
;; |  \/  |_ _|_   _| | |   (_) ___ ___ _ __  ___  ___
;; | |\/| || |  | |   | |   | |/ __/ _ \ '_ \/ __|/ _ \
;; | |  | || |  | |   | |___| | (_|  __/ | | \__ \  __/
;; |_|  |_|___| |_|   |_____|_|\___\___|_| |_|___/\___|
;;
;; Permission is hereby granted, free of charge, to any person obtaining a copy
;; of this software and associated documentation files (the "Software"), to
;; deal in the Software without restriction, including without limitation the
;; rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
;; sell copies of the Software, and to permit persons to whom the Software is
;; furnished to do so, subject to the following conditions:
;;
;; The above copyright notice and this permission notice shall be included in
;; all copies or substantial portions of the Software.
;;
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
;; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
;; IN THE SOFTWARE.
;; ____________________________________________________________________________
;; ----------------------------------------------------------------------------
;; "Zetus Lupetus" "Omelette du fromage" "You're killing me smalls" "Ugh As If"
;; "Hey. Listen!" "Do a barrel roll!" "Dear Darla, I hate your stinking guts."
;; "If we listen to each other's hearts. We'll find we're never too far apart."
;; ____________________________________________________________________________

;; TODO need CanQuit link need forced shuffle/loop check(set;check:mismatch == unsupported)
;; playbackStatus 0 playing, 1 paused, 2 stopped
;; Loop -1 unsupported, 0 none, 1 track, 2 playlist 
;; Shuffle -1 Unsupported, 0 not shuffled, 1 shuffled
(deflisten audioSources
  :initial '[{"longName": "UUID","Name": "firefox","canControl": false,"canGoNext": false,"canGoPrevious": false,"canPause": false,"canPlay": false,"canSeek": false,"playbackStatus": 0,"isShuffle": 0, "loop": 0, "title": "title","album": "album","artist": "artist","artUrl": "./assets/pacman.svg","url": "url","length": 1000000,"lengthHMS": "00:01","sinkId": "UUIDpointer","index": "117","sink": 3736,"volume": 100,"isMute": false, "hasPlayerctl": true}]'
  `$HOME/.config/eww/bin/mpris_fetch`
)

(deflisten audioSinks
  :initial '[{"index": "1", "isMute": true, "volume": 0, "isDefault": true, "name": "UUIDname", "description": "description", "icon": "audio-speakers"}]'
  `$HOME/.config/eww/bin/audio_out`
)

(deflisten audioPosition ; Seperated from audioSources to limit the GTK redraw
  :initial '{"UUID":90, "UUIDHMS":"1:30"}'
  `$HOME/.config/eww/bin/mpris_position`
)

(defvar playerVolumeIsHovered false)
(defvar hoveredPlayer "")

(defwidget audioButton []
  (eventbox
    :tooltip
`Audio panel:
Right click Mute
Left click open/close panel`
    :onclick "eww open --toggle audioPanel"
    :onrightclick "wpctl set-mute @DEFAULT_SINK@ toggle"
    (literal :halign "center" :valign "center" :content
      {
        "${jq(audioSinks, '.[] | select(.isDefault) | (.isMute)') ?
          '(image
            :path "./assets/icons/media/volume-mute.svg"
            :image-width 24
            :fill-svg "#f38ba8"
          )':
          '(image :path "./assets/icons/media/volume-high.svg"
            :image-width 24
            :fill-svg "#a6e3a1"
          )'
        }"
      }
    )
  )
)


(defwindow audioPanel
  :monitor 1
  :stacking "fg"
  :geometry (geometry
              :width 500
              :anchor "top right")
  (eventbox
    :onhover 'eww update hover_state="audioPanel"'
    :onhoverlost './scripts/check_hover.sh audioPanel &'
    (box
      :class "window"
      :space-evenly false
      :orientation "v"
      (audio)
    )
  )
)

(defwidget audio []
  (box
    :space-evenly false
    :orientation "v"
    :spacing 10
    (audioDevices)
    (box
      :orientation "v"
      :space-evenly false
      (nonPlayers)
      (players)
    )
  )
)

(defwidget audioDevices []
  (box
    :space-evenly false
    (for s in audioSinks
      (box
        :hexpand true
        :space-evenly false
        (button :class "${s.isDefault == true ? "active" : "inactive"}"
          :onclick "pactl set-default-sink ${s.name}"
          :tooltip "${s.description}"
          :width 75
          :height 75
          (image
            ; :icon "${s.icon}"
            ; :icon-size "dialog"
            :path "./assets/icons/devices/${s.icon == "audio-headset-bluetooth" ? "audio-earbuds" : s.icon == "audio-speakers" ? "audio-speakers" : "media-tape"}.svg"
            :image-height 42
          )
        )
        (box
          :hexpand true
          :orientation "v"
          :space-evenly false
          :valign "end"
          (box :space-evenly false
            (label :class "green" :text "${s.volume}")
            (scale
              :hexpand true
              :class "low-vis marginleft margintop"
              :round-digits 0
              :min 0
              :max 101
              :value "${s.volume}"
              :onchange "pactl set-sink-volume ${s.name} {}%"
            )
          )
          (eventbox
            :halign "start"
            :onclick "pactl set-sink-mute ${s.name} toggle"
            (image
              :image-width 24
              :path "./assets/icons/media/volume-${s.isMute ? "mute" : "high"}.svg"
              :fill-svg "${s.isMute ? "#f38ba8" : "#a6e3a1" }"
            )
          )
        )
      )
    )
  )
)


(defwidget nonPlayers []
  (box
    :orientation "v"
    :space-evenly false
    (for p in audioSources
      (eventbox
        :visible "${! p.hasPlayerctl}"
        :onhover `eww update hoveredPlayer="${p.name}"`
        :onhoverlost `eww update hoveredPlayer""`
        (box
          :class "panel"
          :visible "${p.PlaybackStatus == "Stopped" ? false : true}"
          :space-evenly false
          :orientation "v"
          (box
            :space-evenly false
            :orientation "v"
            (label
              :class "green"
              :xalign 0
              :wrap true
              :hexpand true
              :show-truncated false
              :text "${p.name}"
            )
            (nonPlayerVolume
              :playerVolume "${p.volume}"
              :playerIsMute "${p.isMute}"
              :sinkId "${p.sinkId}"
              :pulseAudioID "${p.index}"
              :playerIsHovered "${p.name == hoveredPlayer ? true : false}"
            )
          )
        )
      )
    )
  )
)

(defwidget players []
  (box
    :orientation "v"
    :space-evenly false
    (for p in audioSources
      (eventbox
        :visible "${p.hasPlayerctl}"
        :onhover `eww update hoveredPlayer="${p.name}"`
        :onhoverlost `eww update hoveredPlayer""`
        (box
          :class "panel"
          :visible "${p.PlaybackStatus == "Stopped" ? false : true}"
          :space-evenly false
          :orientation "v"
          (box
            :space-evenly false
            :orientation "h"
            (label
              :class "green"
              :xalign 0
              :wrap true
              :hexpand true
              :show-truncated false
              :text "${p.title}"
            )
            ; TODO add a call to canQuit to determine if the player is exitable from playerctl
            ; Rough in just to include the option to quit from panel some players will not work
            (eventbox
              :onclick "dbus-send --print-reply --dest=${p.longName} /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Quit"
              (label
                :class "red"
                :text "X"
              )
            )
          )
          (box
            :space-evenly false
            :spacing 10
            (box
              :halign "start"
              (image
                :image-height 100
                :path "${matches(p.title, " - Twitch$") ? "./assets/twitch-logo.svg" : p.artUrl}"
              )
            )
            (box
              :class "smallish green"
              :hexpand true
              :orientation "v"
              :space-evenly false
              (label :truncate true :class "subtext" :xalign 0 :text "${p.artist}")
              (label :truncate true :class "subtext" :xalign 0 :text "${p.album}")
              (mediaButtons
                :canGoPrevious "${p.canGoPrevious}"
                :canGoNext "${p.canGoNext}"
                :canPlay "${p.canPlay}"
                :playing "${p.playbackStatus}"
                :name "${p.name}"
                :loop "${p.loop}"
                :isShuffle "${p.isShuffle}"
              )
              (scale
                :class "${p.canSeek == false ? "inactive" :
                       "${matches(p.title, "Twitch$")}" ? "inactive" : ""}"
                ; Slow GTK draw if length is large. Compress to max length 100.
                ; :max "${p.length}"
                ; :onchange "playerctl --player=${p.Name} position {}"
                ; :value "${jq(audioPosition, '."${p.longName}"', 'r')}"
                :max 101
                :onchange "playerctl --player=${p.name} position $(({} * ${p.length} / 100))"
                :value "${100 * jq(audioPosition, '."${p.longName}"', 'r') / p.length}"
              )
              (label
                :xalign 1
                :class "${p.lengthHMS == "live" ? "red" : ""}"
                :text "${p.lengthHMS == "live" ? " live" :
                         p.length == "" ? "--/--" :
                        "${jq(audioPosition, '."${p.longName}HMS"', "r")}/${p.lengthHMS}"
                        }"
              )
            )
          )
          (box
            :space-evenly false
            :class "smallish green"
            (playerVolume
              :playerVolume "${p.volume}"
              :playerIsMute "${p.isMute}"
              :sinkId "${p.sinkId}"
              :pulseAudioID "${p.index}"
              :playerIsHovered "${p.name == hoveredPlayer ? true : false}")
            (label
              :class "subtext"
              :hexpand "${p.serial == "" ? true : false}"
              :halign "end"
              :text "${p.name}"
            )
          )
        )
      )
    )
  )
)


(defwidget mediaButtons [canGoPrevious canGoNext canPlay
                         playing name loop isShuffle]
  (box
    (box
      :halign "start"
      :class "paddingbottom"
      :spacing 10
      (eventbox
        :onclick "playerctl --player=${name} previous"
        (image
          :fill-svg "${canGoPrevious ? "#cdd6f4" : "#45475a"}"
          :image-height 18
          :path "./assets/icons/media/prev.svg"
        )
      )
      ;; playbackStatus 0 playing, 1 paused, 2 stopped
      (eventbox
        :onclick "playerctl --player=${name} play-pause"
        (image
          :fill-svg "${canPlay ? "#cdd6f4" : "#45475a"}"
          :image-height 18
          :path "./assets/icons/media/${playing == 0 ? "pause" : "play"}.svg"
        )
      )
      (eventbox
        :onclick "playerctl --player=${name} next"
        (image
          :fill-svg "${canGoNext ? "#cdd6f4" : "#45475a"}"
          :image-height 18
          :path "./assets/icons/media/next.svg"
        )
      )
    )
    (box
      :halign "end"
      :class "paddingbottom"
      :space-evenly false
      :spacing 10
      ;; Loop -1 unsupported, 0 none, 1 track, 2 playlist 
      ;; Shuffle -1 Unsupported, 0 not shuffled, 1 shuffled
      (eventbox
        :onclick "playerctl --player=${name} loop ${
                        loop == 0 ? "track" :
                        loop == 1 ? "playlist" :
                        "none"
                      }"
        (image
          :fill-svg "${loop == 1 ? "#cdd6f4" :
                       loop == 2 ? "#cdd6f4" : "#45475a"}"
          :image-height 24
          :path "./assets/icons/media/${loop == 1 ? "loop-track" :
                            loop == 2 ? "loop" :
                            loop == 0 ? "loop" :
                            "loop-disabled"
                            }.svg"
        )
      )
      (eventbox
        :onclick "playerctl --player=${name} shuffle ${isShuffle == 1 ? "off" : "on"}"
        (image
          :fill-svg "${isShuffle == 1 ? "#cdd6f4" : "#45475a"}"
          :image-height 24
          :path "./assets/icons/media/${isShuffle == 1 ? "shuffle-on" :
                        isShuffle == 0 ? "shuffle-off" :
                        "shuffle-disabled"
                       }.svg"
        )
      )
    )
  )
)

(defwidget playerVolume [playerVolume
                         playerIsMute
                         sinkId
                         pulseAudioID
                         playerIsHovered]
  (box
    :hexpand true
    :halign "${playerVolumeIsHovered ? "fill" : "start"}"
    :space-evenly false
    (box
      :halign "start"
      :valign "center"
      :visible "${arraylength(audioSinks) > 1 ? true : false}"
      (for s in audioSinks
        (eventbox
          :onclick "pactl move-sink-input ${pulseAudioID} ${s.name}"
          :tooltip "${s.description}"
          (image
            :class "paddingright"
            :image-height 16
            :fill-svg "${s.index == sinkId ? "#cdd6f4" : "#45475a"}"
            :path "${s.icon == "audio-speakers" ?
              "./assets/icons/media/small-speaker.svg" :
              s.icon == "audio-headset-bluetooth" ?
              "./assets/icons/media/small-earbuds.svg" :
              "./assets/icons/missing.svg"}"
          )
        )
      )
    )
    (eventbox
      :onhover 'eww update playerVolumeIsHovered=true'
      :onhoverlost 'eww update playerVolumeIsHovered=false'
      :visible "${sinkId == 0 ? false : true}"
      (box
        :space-evenly false
        (eventbox
          :onclick 'pactl set-sink-input-mute ${pulseAudioID} toggle'
          (box :space-evenly false :valign "center"
            (image
              :class "paddingleft paddingright"
              :image-height 16
              :valign "center"
              :halign "center"
              :path "./assets/icons/media/volume-${playerIsMute ? "mute" : "high"}.svg"
              :fill-svg "${playerIsMute ? "#f38ba8" : "#a6e3a1"}"
            )
            (label
              :class "${playerIsMute ? "red" : ""}"
              :text playerVolume
            )
          )
        )
        (revealer
          :transition "slideleft"
          :reveal "${playerVolumeIsHovered ? playerIsHovered : false}"
          :duration "1000ms"
          (scale
            :class "low-vis marginright marginleft margintop"
            :width 150
            :value playerVolume
            :onchange "pactl set-sink-input-volume ${pulseAudioID} {}%"
            :max 101
            :min 0
          )
        )
      )
    )
  )
)

(defwidget nonPlayerVolume [playerVolume
                            playerIsMute
                            sinkId
                            pulseAudioID
                            playerIsHovered]
  (box
    :hexpand true
    :halign "fill"
    :space-evenly false
    (box
      :halign "start"
      :valign "center"
      :visible "${arraylength(audioSinks) > 1 ? true : false}"
      (for s in audioSinks
        (eventbox
          :onclick "pactl move-sink-input ${pulseAudioID} ${s.name}"
          :tooltip "${s.description}"
          (image
            :class "paddingright"
            :image-height 16
            :fill-svg "${s.index == sinkId ? "#cdd6f4" : "#45475a"}"
            :path "${s.icon == "audio-speakers" ?
              "./assets/icons/media/small-speaker.svg" :
              s.icon == "audio-headset-bluetooth" ?
              "./assets/icons/media/small-earbuds.svg" :
              "./assets/icons/missing.svg"}"
          )
        )
      )
    )
    (box
      :space-evenly false
      :hexpand true
      (eventbox
        :onclick 'pactl set-sink-input-mute ${pulseAudioID} toggle'
        (box :space-evenly false :valign "center"
          (image
            :class "paddingleft paddingright"
            :image-height 16
            :valign "center"
            :halign "center"
            :path "./assets/icons/media/volume-${playerIsMute ? "mute" : "high"}.svg"
            :fill-svg "${playerIsMute ? "#f38ba8" : "#a6e3a1"}"
          )
          (label
            :class "${playerIsMute ? "red" : "green"}"
            :text playerVolume
          )
        )
      )
        (scale
          :class "low-vis marginright marginleft margintop"
          :hexpand true
          :value playerVolume
          :onchange "pactl set-sink-input-volume ${pulseAudioID} {}%"
          :max 101
          :min 0
        )

    )
  )
)
