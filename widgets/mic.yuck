;; -*- mode: lisp -*-
(deflisten audioMonitors :initial '[{"id": 1, "mute": true, "volume": 0, "default": true, "source": "pointer", "name": "Name", "icon": "audio-card-analog", "state": "suspended"}]'
  `~/.config/eww/bin/audio_in`)

(defwidget micButton []
  (box 
    (eventbox 
      :onclick "eww open --toggle micPanel"
      :onrightclick 'pactl set-source-mute "$(pactl get-default-source)" toggle'
      (image 
        :image-height 24
        :path "./assets/icons/mic-${jq(audioMonitors, '.[] | select(.default) | (.state == "suspended")') ? "off" : "on"}.svg" 
        :fill-svg "${jq(audioMonitors, '.[] | select(.default) | (.mute)') ? "#45475a" : "#f38ba8"}" 
      )
    )
  )
)

(defwindow micPanel
  :monitor 1
  :stacking "fg"
  :geometry (geometry
              :width 500
              :anchor "top right")
  (eventbox
    :onhover 'eww update hover_state="micPanel"'
    :onhoverlost 'eww update hover_state="" && ./scripts/check_hover.sh micPanel &'
    (box 
      :class "window"
      :space-evenly false
      :orientation "v"
      :spacing 10
      (microphone)
    )
  )
)

(defwidget microphone []
  (box 
    :orientation "v"
    :spacing 10
    (for source in audioMonitors
      (eventbox
        ; Do not display Virtual 'Monitors' of sources.
        :visible "${matches(source.name, "^Monitor") ? false : true}"
        :class 'btns-bar${source.state == "suspended" ? " disabled" : " enabled"} ${source.default == true ? " active": ""}'
        (box :hexpand true :space-evenly false 
          (image
            :class "marginleft"
            :halign "start" 
            ; :icon "${source.icon}"
            ; :icon-size "dialog"
            :path "./assets/icons/devices/${source.icon == "audio-headset-bluetooth" ? "audio-earbuds" : "input-microphone"}.svg"
            :image-height 42
          )
          (label 
            :class "marginleft marginright"
            :hexpand true 
            :xalign 0 
            :text "${source.name}"
          )
          (label 
            :class 'marginright${source.mute ? " red" : ""}'
            :xalign 1 
            :text "${source.mute ? "Muted" : source.volume}"
          )
        )
      )
    )
  )
)
