;; -*- mode: lisp -*-
(deflisten wifiScan :initial '[{"SSID": "Catalyst", "Frequency": 5180, "Strength": 63, "connected": true}]'
  `~/.config/eww/bin/wlan_scan`)

(deflisten wlan-monitor :initial '{"state": 100, "strength": 62}'
  `~/.config/eww/bin/wlan_monitor`)

(defwidget wifiButton []
  (eventbox 
    :onclick "eww open --toggle wifiPanel"
    :onrightclick "rfkill toggle wlan"
    (literal
      :valign "center"
      :halign "center"
      :content {
        wlan-monitor.state == 20 ? 
          "(image  
            :image-width 24 
            :path './assets/icons/wifi/disabled.svg' 
            :fill-svg '#45475a')":
        wlan-monitor.state == 10 ? 
          "(label 
            :text '' 
            :class 'marginright large red')" :
        wlan-monitor.state == 60 ? 
          "(label 
            :text '󰤬' 
            :class 'marginright large red')" :
        wlan-monitor.state != 100 ? 
          "(image 
            :path './assets/icons/wifi/scan-small.gif')" :
        wlan-monitor.strength > 70 ? 
          "(image 
            :image-width 24 
            :path './assets/icons/wifi/full.svg' 
            :fill-svg '#89b4f1')" :
        wlan-monitor.strength > 50 ? 
          "(image 
            :image-width 24 
            :path './assets/icons/wifi/high.svg' 
            :fill-svg '#a6e3a1')" :
        wlan-monitor.strength > 35 ? 
          "(image 
            :image-width 24 
            :path './assets/icons/wifi/mid.svg' 
            :fill-svg '#f9e2af')" : 
        wlan-monitor.strength > 20 ? 
          "(image 
            :image-width 24 
            :path './assets/icons/wifi/low.svg' 
            :fill-svg '#fab387')" :
          "(image 
            :image-width 24 
            :path './assets/icons/wifi/none.svg' 
            :fill-svg '#f38ba8')"
      }
    )
  )
)

(defwindow wifiPanel
  :monitor 1
  :stacking "fg"
  :geometry (geometry
              :width 500
              :anchor "top right")
  (eventbox
    :onhover 'eww update hover_state="wifiPanel"'
    :onhoverlost 'eww update hover_state="" && ./scripts/check_hover.sh wifiPanel &'
    (box 
      :class "window"
      :orientation "v"
      :space-evenly false
      :spacing 10
      (wifi)
    )
  )
)


(defwidget wifi []
  (box 
    :orientation "v"
    :space-evenly false
    :spacing 10
    (box 
      :space-evenly false
      (wifiCode)
      (box :class "btns-box"
        (button 
          :width 75
          :height 75
          :class "inactive"
          :onclick "nmcli device wifi rescan ifname wlan0" 
          (image 
            :image-height 42
            :path "./assets/icons/wifi/scan-off.gif"
          )
        )
      )
    )
    (for w in wifiScan
      (eventbox 
        :hexpand true 
        :class "btns-bar ${w.connected == true ? "active enabled" : "enabled"}"
        (box 
          :space-evenly false 
          :class "marginleft marginright" 
          :hexpand true
          (literal 
            :halign "center"
            :valign "center"
            :content 
            {
              w.Strength > 70 ? 
                "(image
                  :image-width 42
                  :path './assets/icons/wifi/full.svg'
                  :fill-svg '#89b4f1')" :
              w.Strength > 50 ? 
                "(image
                  :image-width 42
                  :path './assets/icons/wifi/high.svg'
                  :fill-svg '#a6e3a1')" :
              w.Strength > 35 ? 
                "(image 
                  :image-width 42
                  :path './assets/icons/wifi/mid.svg'
                  :fill-svg '#f9e2af')" :
              w.Strength > 20 ? 
                "(image
                  :image-width 42
                  :path './assets/icons/wifi/low.svg'
                  :fill-svg '#fab387')" :
                "(image 
                  :image-width 42
                  :path './assets/icons/wifi/none.svg'
                  :fill-svg '#f38ba8')"
            }
          )
          (label
            :yalign 1
            :class "marginright small bold"
            :text "${
                    w.Frequency > 5000 ? "5G" :
                    w.Frequency > 4000 ? "4G" :
                    w.Frequency > 3000 ? "3G" :
                    "2G"
                    }"
          )
          (label 
            :halign "end" 
            :hexpand true 
            :text "${w.SSID} "
          )
        )
      )
    )
  )
)

(defwidget wifiCode []
  (label 
    :halign "start"
    :valign "end"
    :hexpand true
    :text "${
      wlan-monitor.state == 10 ? "Not Managed By NetworkManager: Unsupported":
      wlan-monitor.state == 20 ? "Wireless Dsiabled" :
      wlan-monitor.state == 30 ? "Not Connected to Network" :
      wlan-monitor.state == 40 ? "Preparing to connect to Network" :
      wlan-monitor.state == 50 ? "Configuring connection to Network" :
      wlan-monitor.state == 60 ? "Authentication to Network Required" :
      wlan-monitor.state == 70 ? "Getting IP configuration" :
      wlan-monitor.state == 80 ? "Checking IP Connectivity" :
      wlan-monitor.state == 90 ? "Waiting for secondary connections" :
      wlan-monitor.state == 100 ? "Fully Connected and active" :
      wlan-monitor.state == 110 ? "Disconnecting from Network" :
      wlan-monitor.state == 120 ? "Connection to Network Failed!" :
      wlan-monitor.state == 0 ? "Returned in error. D-Bus Failure!" : 
      "Unknown State!"}"
  )
)
